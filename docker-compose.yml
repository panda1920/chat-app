name: chat-app

# base args used in custom containers
x-uid-gid: &uid-gid
  UID: 1000 # set your userid here
  GID: 1000 # set your groupid here

# base setting for ws-handler service
x-ws-handler-base: &ws-handler-base
  image: panda1920/chat-api-nodejs:dev
  build:
    context: ./ws-handler
    dockerfile: ./docker/dev/Dockerfile
    args:
      <<: *uid-gid
  command: "npm run start:debug"
  volumes:
    - ./ws-handler:/app
  tty: true
  stdin_open: true
  restart: unless-stopped
  depends_on:
    - dynamo
  # env_file:
  #   - ./backend/.env

services:
  backend:
    image: panda1920/chat-api-backend:dev
    build:
      context: ./backend
      dockerfile: ./docker/dev/Dockerfile
      args:
        <<: *uid-gid
    container_name: chat-backend
    command: "npm run start:debug"
    volumes:
      - ./backend:/app
      - ./.aws:/home/node/.aws # use this if your user is 1000:1000
      # - ./.aws:/home/chat_user/.aws # use this instead if your user is not 1000:1000
    ports:
      - 3000:3000
      - 30000:9229
    tty: true
    stdin_open: true
    depends_on:
      - dynamo
    env_file:
      - ./backend/.env

  # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html#docker
  dynamo:
    image: amazon/dynamodb-local:latest
    container_name: chat-dynamo
    # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.UsageNotes.html
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    volumes:
      - ./backend/data/dynamoDB:/home/dynamodblocal/data
    ports:
      - 8000:8000
    working_dir: /home/dynamodblocal
  
  dynamo-admin:
    # https://hub.docker.com/r/aaronshaf/dynamodb-admin/
    image: aaronshaf/dynamodb-admin:latest
    container_name: chat-dynamo-admin
    ports:
      - 8001:8001
    environment:
      DYNAMO_ENDPOINT: 'http://dynamo:8000'
      AWS_REGION: 'ap-northeast-1'
      AWS_ACCESS_KEY_ID: 'dummyAccessKey'
      AWS_SECRET_ACCESS_KEY: 'dummySecret'
    depends_on:
      - dynamo

  ws-handler1:
    <<: *ws-handler-base
    container_name: chat-ws-handler1
    ports:
      - 3001:3000
      - 30001:9229

  ws-handler2:
    <<: *ws-handler-base
    container_name: chat-ws-handler2
    ports:
      - 3002:3000
      - 30002:9229

  chat-lb:
    image: nginx:latest
    container_name: chat-lb
    volumes:
      - ./lb/conf/:/etc/nginx/conf.d
      - ./lb/logs:/var/log/nginx
    ports:
      - 8080:80
    tty: true
    stdin_open: true
    restart: unless-stopped
    depends_on:
      - backend
      - ws-handler1
      - ws-handler2
